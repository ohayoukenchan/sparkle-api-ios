openapi: 3.0.0
info:
  title: Sparkle
  description: Sparkle API
  version: 0.0.0
servers:
  - url: https://us-central1-sparkle-1c277.cloudfunctions.net
    description: プロダクション API
  - url: https://us-central1-sparkle-1c277.cloudfunctions.net
    description: 開発用
    variables:
      host:
        default: localhost
      port:
        default: '10080'
        
paths:
  /addBooks:
    post:
      summary: 書籍データを追加して追加した書籍を返します
      description: めせーず
      tags:
        - books
      responses:
        '200': # HTTP status
          description: A JSON of Book model
          content:
            application/json: # レスポンスの形式指定
              schema: 
                #type: object
                $ref: '#/components/schemas/Book' # 参照するモデル
  /getBooks:
    get:
      summary: 書籍データを返します
      description: 書籍の一覧
      tags:
        - books
      responses:
        '200': # HTTP status
          description: サーバーは正常に動作しています
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Books'
  /getPhrases:
    get:
      summary: Phraseの一覧を返します
      description: phraseの一覧
      tags:
        - phrases
      responses:
        '200':
          description: サーバーは正常に動作しています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrases'
      
  /addMessage:
    post:
      # operationId: openapitutorial.controller.health.call
      summary: メッセージを送信します。
      description: サーバーの状態を返します。

      parameters:
        - in: query
          name: text
          schema:
            type: string
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: サーバーは正常に動作しています
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/post_message_response'
  /getUser:
    get:
      summary: ユーザーを取得します（仮）
      description: ユーザーの取得
      # Operationオブジェクト
      tags:
        - users
      parameters: []
      responses: # レスポンス定義
        '200': # HTTP status
          description: A JSON object of User model
          content:
            application/json: # レスポンスの形式指定
              schema: 
                $ref: '#/components/schemas/User' # 参照するモデル

      # responses:
      #   default:
      #     description: return to api response
      #     content:
      #       text/plain:
      #         schema:
      #           type: string
components:
  schemas:
    post_message_response:
      description: サーバーの状態のレスポンス
      type: object
      properties:
        status:
          type: string
          enum:
            - ok
      required:
        - status
    Book:
      description: 書籍モデル
      type: object
      required:
        - isbn
      properties:
        isbn:
          type: number
          example: 9784788510142
        title:
          type: string
          example: "スケートボーディング、空間、都市―身体と建築 (日本語) 単行本"
        publisher:
          type: string
          example: "新曜社"
        price:
          type: string
          example: "6050"
    Books:
      description: 書籍一覧
      type: array
      items:
        $ref: "#/components/schemas/Book"
    UserInPhrases:
      description: Phraseが参照しているユーザーデータ
      type: object
      properties:
        name: 
          type: string
          example: "takano"
        avatarUrl: 
          type: string
          example: "https://firebasestorage.googleapis.com/v0/b/sparkle-1c277.appspot.com/o/10736733.jpeg?alt=media&token=2aa03fc7-a996-4a07-ac1c-692fa0bec770"
        id: 
          type: number
          example: 1
    Phrase:
      description: フレーズモデル
      type: object
      required: 
        - bookId
      properties:
        createdAt: 
          type: string
          example: "2020-05-19T15:00:00.000Z"
        phrase: 
          type: string
          example: "反骨心が俺の恩人であり相棒さ"
        bookId: 
          type: number
          example: 9784046041371
        userID:
          $ref: "#/components/schemas/UserInPhrases"
        updatedAt: 
          type: string
          example: "2020-05-19T15:00:00.000Z"
    Phrases:
      description: フレーズ一覧
      type: array
      items:
        $ref: "#/components/schemas/Phrase"
    User:
      description: ユーザーモデル
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          example: 1
        name:
          type: "string"
          example: "doggie"
        avatarUrl:
          type: "string"
          example: "http://example.com/foo.jpg"