openapi: 3.0.0
info:
  title: Sparkle
  description: Sparkle API
  version: 0.0.0
servers:
  - url: https://us-central1-sparkle-1c277.cloudfunctions.net
    description: プロダクション API
  - url: https://us-central1-sparkle-1c277.cloudfunctions.net
    description: 開発用
    variables:
      host:
        default: localhost
      port:
        default: '10080'
        
paths:
  /addBooks:
    post:
      summary: 書籍データを追加して追加した書籍を返します
      description: めせーず
      responses:
        '200': # HTTP status
          description: A JSON of Book model
          content:
            application/json: # レスポンスの形式指定
              schema: 
                #type: object
                $ref: '#/components/schemas/Book' # 参照するモデル
      
  /addMessage:
    post:
      # operationId: openapitutorial.controller.health.call
      summary: メッセージを送信します。
      description: サーバーの状態を返します。
      parameters:
        - in: query
          name: text
          schema:
            type: string
          description: The number of items to skip before starting to collect the result set
      responses:
        '200':
          description: サーバーは正常に動作しています
          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/post_message_response'
  /getMessages:
    get:
      summary: メッセージを取得します
      description: メッセージの取得
      # Operationオブジェクト
      tags:
        - users
      parameters: []
      responses: # レスポンス定義
        '200': # HTTP status
          description: A JSON array of User model
          content:
            application/json: # レスポンスの形式指定
              schema: 
                $ref: '#/components/schemas/User' # 参照するモデル

      # responses:
      #   default:
      #     description: return to api response
      #     content:
      #       text/plain:
      #         schema:
      #           type: string
components:
  schemas:
    post_message_response:
      description: サーバーの状態のレスポンス
      type: object
      properties:
        status:
          type: string
          enum:
            - ok
      required:
        - status
    Book:
      description: 書籍モデル
      type: object
      required:
        - isbn
      properties:
        isbn:
          type: string
          example: "9784788510142"
        title:
          type: string
          example: "スケートボーディング、空間、都市―身体と建築 (日本語) 単行本"
        publisher:
          type: string
          example: "新曜社"
        price:
          type: string
          example: "6050"
    User:
      description: ユーザーモデル
      type: array
      items:
        type: "object"
        properties:
          id:
            type: "integer"
            format: "int64"
            example: 1
          name:
            type: "string"
            example: "doggie"

        